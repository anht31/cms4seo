@using System.Text.RegularExpressions;
@using cms4seo.Model.cms4seoType
@model Article


@{
    var theme = Setting.WebSettings[WebSettingType.CurrentTheme];
    Layout = "~/Themes/" + theme + "/Views/Shared/_LayoutArticle.cshtml";

    ViewBag.Title = Model.MetaTitle;
    ViewBag.Description = Model.MetaDescription;
    ViewBag.Keywords = Model.MetaKeyWords;

    if (Model != null)
    {
        ViewBag.OgUrl = Request.Url.AbsoluteUri;
        ViewBag.OgType = "article";
        ViewBag.OgImage = Model.Photos.FirstOrDefault() != null ? Model.Photos.FirstOrDefault().LgPath : "";
    }
}

@*@Html.Partial("_BreadcrumbInfo", (string)Model.Topic.Name)*@



<div class="container-article container-light mt-2">



    @if (Model != null)
    {

        <!-- Blog Post -->

        <div>
            <h2 class="text-danger">
                @Model.Name
                @*<small>Secondary Text</small>*@
            </h2>
        </div>


        <p class="mt-3">
            <em>
                <span @CMS.Attribute("Article.Detail.DateCreated")>
                    @Setting.Contents["Article.Detail.DateCreated"]
                </span>
                @Model.PostedDate.Value.ToShortDateString()
                <span @CMS.Attribute("Article.Detail.Viewed")>
                    @Setting.Contents["Article.Detail.Viewed"]
                </span>
                <span class="">@Model.ViewCounter</span>
            </em>
        </p>
        <div class="container-fluid article-content" style="padding-left:0;">
            @if (Setting.WebSettings[TocSettingType.IsAutoArticleTOC].AsBool()
            && !string.IsNullOrWhiteSpace(Model.ContentWithTOC))
            {
                @Html.Raw(Model.ContentWithTOC)
            }
            else
            {
                @Html.Raw(Model.Content)
            }
        </div>
        
        if (Model.Photos.Any(x => x.Entity == "doc"))
        {
            <hr />
            <div>
                <ul>
                    @foreach (var item in Model.Photos.Where(x => x.Entity == "doc"))
                    {
                        <li>


                            <a class="h3" href="@Url.Action("Doc", "Download", new {name = item.Name + item.MimeType})" target="_top">
                                @(item.Name + item.MimeType)
                                &nbsp;
                                <span class="btn btn-primary">
                                    <span class="glyphicon glyphicon-download-alt"></span>
                                    <span @CMS.Attribute("Article.Detail.Download")>
                                        @Setting.Contents["Article.Detail.Download"]
                                    </span>
                                </span>
                            </a>

                        </li>
                    }
                </ul>
            </div>
        }
    }


    <br />
    @*<hr/>*@

    @*<div class="fb-comments" data-href="@Request.Url.AbsoluteUri" data-width="100%" data-numposts="20"></div>*@

    
    @Html.Partial("_PromoteProduct")
    



</div>


<div class="container-light pb-5">
    @{
        Html.RenderAction("AllTag", "ArticleTags");
    }
    
    <br/>

    
    @if (!string.IsNullOrWhiteSpace(Setting.WebSettings[EmbedSettingType.Comment])
         && Setting.WebSettings[EmbedSettingType.Comment].Contains("data-href=")
         && Setting.WebSettings[ShopSettingType.IsShowArticleComment].AsBool())
    {
        var dataHref = "data-href=\"" + Request.Url.AbsoluteUri + "\"";
        var embed = Setting.WebSettings[EmbedSettingType.Comment];
        var embedComments = Regex.Replace(embed, "data-href=\"(.*)\"",
            dataHref, RegexOptions.Multiline | RegexOptions.IgnoreCase);
        @Html.Raw(embedComments);
    }

</div>


<!-- relative ============================================================================================ -->
@{
    Html.RenderAction(Model.ArtilceTags.Any() ? "RelateArticleByTag" : "RelateArticle", "Articles", new { articleId = Model.Id });
}


