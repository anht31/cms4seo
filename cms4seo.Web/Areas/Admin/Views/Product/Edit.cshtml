
@using System.Web.Mvc.Html
@using cms4seo.Common.AdminHelpers
@using cms4seo.Common.Culture
@using cms4seo.Model.LekimaxType
@using cms4seo.Service.Product

@model Product

@{
    ViewBag.Title = "Admin: Edit " + Model.Name;
}



<div class="row">
    <div class="col-md-8">


        @using (Html.BeginForm("Edit", "Product", FormMethod.Post, new { id = "formSubmit" }))
        {
            <div class="card">
                <div class="card-header">
                    @if (Model.IsCreate)
                    {

                        <span class="h3">@AdminResources.CommonProduct / @AdminResources.CommonCreateHeader</span>
                    }
                    else
                    {
                        <span class="h3">@AdminResources.CommonProduct / @AdminResources.CommonEdit / @Model.Name</span>
                    }

                    <span class="float-right">
                        <input type="submit" value="@AdminResources.CommonSave" class="btn btn-primary btn-sm" />
                    </span>
                    <span class="float-right" style="margin-right: 5px;">
                        @Html.ActionLink(AdminResources.CommonCancel, "Index", null, new { @class = "btn btn-outline-secondary btn-sm" })
                    </span>
                </div>

                <div class="card-body">
                    
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                    @*@Html.Partial("_DebugModelMetadata", ViewData.ModelMetadata.Properties)*@
                    
                    @*CONVERT TO BASE64 STRING TO POST*@
                    @*<canvas id="hiddenCanvas" width="0" height="0"></canvas>*@
                    @*<input type="hidden" name="uploadData" id="uploadData" />*@ 
                    @*CONTAINER BASE64 STRING*@

                    @foreach (var property in ViewData.ModelMetadata.Properties
                        .Where(
                            x => !x.IsComplexType                            
                            && x.DataTypeName != cms4seoDataType.CustomEditor
                            && !x.ShowForEdit
                    )){
                        @Html.Hidden(property.PropertyName)
                    }



                    <div class="form-group">
                        @Html.LabelFor(model => model.IsPublish)
                        @Html.EditorFor(model => model.IsPublish)
                        @Html.ValidationMessageFor(model => model.IsPublish, "", new { @class = "text-danger" })
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.IsHome)
                        @Html.EditorFor(model => model.IsHome)
                        @Html.ValidationMessageFor(model => model.IsHome, "", new { @class = "text-danger" })
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.IsOutOfStock)
                        @Html.EditorFor(model => model.IsOutOfStock)
                        @Html.ValidationMessageFor(model => model.IsOutOfStock, "", new { @class = "text-danger" })
                    </div>

                    
                    <div class="form-group">
                        @Html.LabelFor(model => model.IsHiddenProductSummary)
                        @Html.EditorFor(model => model.IsHiddenProductSummary)
                        @Html.ValidationMessageFor(model => model.IsHiddenProductSummary, "", new { @class = "text-danger" })
                    </div>

                    @*<div class="form-group">
                            @Html.LabelFor(model => model.Location)
                            @Html.DropDownListFor(model => model.Location, new SelectList(
                                Model.LocationRule, "Key", "Value"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
                        </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryId)
                        @Html.DropDownGroupList("CategoryId", (int?) ViewBag.SelectedCategory, (List<Category>) ViewBag.Categories
                            , x => !x.ParentId.HasValue, (x, y) => x.ParentId.Equals(y.Id)
                            , "Id", "Name", null)
                        @*@Html.DropDownList("CategoryId", null, new {@class = "form-control"})*@
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new {@class = "text-danger"})
                    </div>



                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Name)
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = ""} })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>*@


                    @*<div class="form-group">
                            @Html.LabelFor(model => model.Name)
                            @Html.EditorFor("Name_" + ci.Neutral(), null, new { htmlAttributes = new { @class = "form-control", @Value = Model.Name.LocalizeExactly(ci.Neutral()) } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Brief)
                            @Html.TextArea("Brief_" + ci.Neutral(), Model.Brief.LocalizeExactly(ci.Neutral()), new { @class = "form-control", rows = 5 })
                            @Html.ValidationMessageFor(model => model.Brief, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description)
                            @Html.TextArea("Description_" + ci.Neutral(), Model.Description.LocalizeExactly(ci.Neutral()), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>*@


                    <!-- edit ==============================================================================-->

                    @foreach (var property in ViewData.ModelMetadata.Properties.Where(
                        x => !x.IsComplexType
                        && x.DataTypeName != cms4seoDataType.CustomEditor
                        && x.ShowForEdit
                    ))
                    {


                        <div class="form-group">
                            <label>
                                @(property.DisplayName ?? property.PropertyName)
                            </label>
                            @if (property.PropertyName == "Brief")
                            {
                                <p class="remainCharacters">155</p>
                                @Html.TextArea(property.PropertyName, null, new { @class = "form-control counterCharacter", spellcheck = "false", rows = 5 })
                            }
                            else if (property.DataTypeName == DataType.MultilineText.ToString())
                            {
                                @Html.TextArea(property.PropertyName, null, new { @class = "form-control", spellcheck = "false", rows = 5 })
                            }
                            else if(property.PropertyName == "Name")
                            {
                                @Html.TextBox(property.PropertyName, null, new { @class = "form-control", required = "required" })
                            }
                            else
                            {
                                @Html.TextBox(property.PropertyName, null, new { @class = "form-control" })
                            }
                            @Html.ValidationMessage(property.PropertyName)
                        </div>
                        
                    }


                    <div class="form-group">
                        @Html.LabelFor(model => model.Published)
                        @Html.EditorFor(model => model.Published, new { htmlAttributes = new { @class = "form-control datepicker" } })
                        @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.StringOldPrice)
                        
                        @if (Setting.WebSettings[WebSettingType.IsAutoThousandSeparator].AsBool())
                        {
                            @Html.EditorFor(model => model.StringOldPrice, new { htmlAttributes = new { @class = "form-control numberPrice" } })
                        }
                        else
                        {
                            @Html.EditorFor(model => model.OldPrice, new { htmlAttributes = new { @class = "form-control" } })
                        }
                        @Html.ValidationMessageFor(model => model.StringOldPrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.StringPrice)
                        @if (Setting.WebSettings[WebSettingType.IsAutoThousandSeparator].AsBool())
                        {
                            @Html.EditorFor(model => model.StringPrice, new { htmlAttributes = new { @class = "form-control numberPrice" } })
                        }
                        else
                        {
                            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
                        }
                        @Html.ValidationMessageFor(model => model.StringPrice, "", new { @class = "text-danger" })
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.SelectedProductTag)
                        @Html.EditorFor(model => model.SelectedProductTag, "TagEditor", new { htmlAttributes = new { @class = "form-control", data_value = "ProductTag" } })
                        @Html.ValidationMessageFor(model => model.SelectedProductTag, "", new { @class = "text-danger" })
                    </div>
                    

                    @if (!string.IsNullOrWhiteSpace(Setting.WebSettings[WebSettingType.OptionProperties]))
                    {
                        foreach (var property in Model.ToProperties())
                        {

                            <div class="form-group">
                                <label for="@property.Name.MakeNameFriendly()">@property.Name</label>
                                @Html.Editor(property.Name.MakeNameFriendly(), null, new { htmlAttributes = new { @class = "form-control", @Value = property.Value } })
                                <span class="field-validation-valid text-danger" data-valmsg-for="@property.Name.MakeNameFriendly()" data-valmsg-replace="true"></span>
                            </div>
    
                        }
                    }


                    <!-- SEO Meta Tags ================================================================-->
                    @Html.Partial("_Seo", Model)





                    @*<div class="form-group">
                            @Html.LabelFor(model => model.Tags)
                            @Html.EditorFor(model => model.Tags, "TagEditor", new { htmlAttributes = new { @class = "form-control", data_value = "Tag" } })
                            @Html.ValidationMessageFor(model => model.Tags, "", new { @class = "text-danger" })
                        </div>*@

                </div>
                <div class="card-footer">
                    <input type="submit" value="@AdminResources.CommonSave" class="btn btn-primary" />
                    @Html.ActionLink(AdminResources.CommonCancel, "Index", null, new { @class = "btn btn-outline-secondary" })
                </div>
            </div>
        }




    </div>
    <div class="col-md-4">
        @Html.Partial("_UploadPhoto", cms4seoEntityType.Product)
    </div>
</div>




<!-- render-script =============================================================================-->
@section Scripts {

    <script>        
        CKEDITOR.dtd.$removeEmpty['span'] = false;

        CKEDITOR.replace('Description',
        {
            height: 600,
            language: '@CultureHelper.GetCurrentNeutralCulture()'
        });


        //CKEDITOR.replace('Specification',
        //{
        //    language: 'en'
        //});

        CKEDITOR.replace('Summary',
        {
            language: '@CultureHelper.GetCurrentNeutralCulture()'
        });
    </script>
}