@model HitCounter

@{
    ViewBag.Title = AdminResources.CommonEdit;
}


@using (Html.BeginForm("Edit", null))
{

@Html.AntiForgeryToken()
<div class="panel panel-default panel-admin">
    <div class="card-header">
        
        @if (Model.CounterId == 0)
        {
                        
            <span class="h3">@AdminResources.CommonHitCounter / @AdminResources.CommonCreateHeader</span>
        }
        else
        {
            <span class="h3">@AdminResources.CommonHitCounter / @AdminResources.CommonEdit / @Model.CounterId</span>
        }


        <span class="float-right">
            <input type="submit" value="Save" class="btn btn-primary"/>
        </span>
        <span class="float-right" style="margin-right: 5px;">
            @Html.ActionLink("Cancel", "Index", null, new {@class = "btn btn-outline-secondary"})
        </span>
    </div>

	<div class="card-body">       
		
			@Html.ValidationSummary(true, "", new { @class = "text-danger" })
			<div class="form-group">
				@Html.LabelFor(model => model.UserGuid, htmlAttributes: new { @class = "control-label" })
				
					@Html.EditorFor(model => model.UserGuid, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.UserGuid, "", new { @class = "text-danger" })
				
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.OpenTime, htmlAttributes: new { @class = "control-label" })
				
					@Html.EditorFor(model => model.OpenTime, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.OpenTime, "", new { @class = "text-danger" })
				
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.AccessTime, htmlAttributes: new { @class = "control-label" })
				
					@Html.EditorFor(model => model.AccessTime, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.AccessTime, "", new { @class = "text-danger" })
				
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.CloseTime, htmlAttributes: new { @class = "control-label" })
				
					@Html.EditorFor(model => model.CloseTime, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.CloseTime, "", new { @class = "text-danger" })
				
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Interval, htmlAttributes: new { @class = "control-label" })
				
					@Html.EditorFor(model => model.Interval, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Interval, "", new { @class = "text-danger" })
				
			</div>

			<div class="form-group">
				
				<label class="checkbox-inline">
    					@Html.EditorFor(model => model.IsOnline)
    					@Html.LabelFor(model => model.IsOnline)
    					@Html.ValidationMessageFor(model => model.IsOnline, "", new { @class = "text-danger" })
				</label>
				
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.IpAddress, htmlAttributes: new { @class = "control-label" })
				
					@Html.EditorFor(model => model.IpAddress, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.IpAddress, "", new { @class = "text-danger" })
				
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.CountryName, htmlAttributes: new { @class = "control-label" })
				
					@Html.EditorFor(model => model.CountryName, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.CountryName, "", new { @class = "text-danger" })
				
			</div>

        
	</div>
	<div class="card-footer">
        <input type="submit" value="Save" class="btn btn-primary" />
        @Html.ActionLink(AdminResources.CommonCancel, "Index", null, new { @class = "btn btn-outline-secondary" })
    </div>
</div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

	<script>


    </script>
}
